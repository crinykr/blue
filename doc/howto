*********** target *********** 

// target machine :
- virtualbox

- processor : 64bit / single core
- mem : 256MB

- hdd : SCSI/IDE 10GB
- nic : amd pcnet32
- display : 

// target boot loader : grub2_1.98-1ubuntu13

// target linux kernel : 3.15.3

// target linux env : ubuntu 10.04.4
- no quota
@ /etc/fstab : add "noquota" option at root fs mount line
- ext2


// host env : fedora 20

********** nfs setting ***********

// host nfs setting
vi /etc/exports
<<<
/works/vm_share/banana/linux-3.15.3 192.168.101.0/255.255.255.0(rw,sync,no_root_squash)
>>>
service nfs start
enable "mountd","nfs","rpc-bind" service in firewall GUI program
or
iptables -F

// target nfs setting (ubuntu 10.04.4)
apt-get install nfs-common
mount 192.168.101.1:/works/vm_share/banana/linux-3.15.3 linux-3.15.3
vi /etc/fstab
<<<
192.168.101.1:/works/vm_share/banana/linux-3.15.3 /home/criny/linux-3.15.3 nfs rsize=8192,wsize=8192,timeo=14,intr
>>>
mount -all


*********** kernel build ************
// gcc --version
gcc (GCC) 4.8.3 20140624 (Red Hat 4.8.3-1)
Copyright (C) 2013 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

// kernel configure

- 100HZ time tick, no tickless kernel
- proessor : 32bit, SMP disable, no preempt, no high mem, no pae
- ethernet : pcnet32
- fs : ext2 
@ no quota
@ no jounal options
- slab
- no bounce buffer
- no cgroup
- no wchan
- no acpi : especially no thermal controller
- no port-IO delay





// trim useless files





******** trim kernel soruce ******
cp ../config/config-0 .config
strace -f -e trace=file make -j4 2>this
or
strace -f -e open,openat make -j4 2>this


grep 'open' this > this

grep 'open(' this2 > this3
grep -v 'open("/' this3 > this4
grep -v 'open("<' this3 > this4
grep -v 'open("\.' this3 > this4




// start with
	grep -E '^ *<' this8


	// end with
	grep '\.o$' this8




find . -name "*.o" -exec rm -rf {} \;



****** set env ***

vi /etc/group
disk:criny
vboxusers:criny


************* mount virtual img for use dev ************

dd if=/dev/zero of=vimg bs=1M count=64
losetup -f	// check available loop device
losetup /dev/loop0 /works/blue/vbox/blue/hdd.img 
VBoxManage internalcommands createrawvmdk \
-filename vdisk.vmdk -rawdisk /dev/loop0






********** mount vdi ************************************************
* for blue kernel devel, start from here
*********************************************************************
**** fedora ****
yum install nbd qemu-img
modprobe nbd

qemu-nbd -c /dev/nbd0 /works/kiwi/vbox/kiwi/kiwi.vdi
kpartx -a /dev/nbd0
mount /dev/mapper/nbd0p1 /mnt/tmp

umount /mnt/tmp
kpartx -d /dev/nbd0
qemu-nbd -d /dev/nbd0

**** ubuntu ****
apt-get install qemu-utils
modprobe nbd

qemu-nbd -c /dev/nbd0 /works/kiwi/vbox/kiwi/kiwi.vdi
mount /dev/nbd0p1 /mnt/tmp

umount /mnt
qemu-nbd -d /dev/nbd0
