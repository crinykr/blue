#ifndef TASK_H_
#define TASK_H_

#include "types.h"
#include "list.h"
#include "fault.h"
#include "sys.h"
#include "page.h"

#define KERNEL_STACK_SIZE           8096

// flags
#define TASK_FLAGS_ENDTASK          0x8000000000000000
#define TASK_FLAGS_SYSTEM           0x4000000000000000
#define TASK_FLAGS_PROCESS          0x2000000000000000
#define TASK_FLAGS_THREAD           0x1000000000000000
#define TASK_FLAGS_IDLE             0x0800000000000000
#define TASK_FLAGS_USERLEVEL        0x0400000000000000


typedef struct tcb_struct {
	QWORD id;
	struct tcb_struct* parent_process;
	char *name;

	regs_t context;
	BOOL fpu_used;
	// fpu data must aligned by 16-bytes - criny: why??
	QWORD fpu_context[512 / 8];

	pml4_t *pml4;

	// for scheduler
	list_node_t sched_link;

	// for child threads list
	list_t child_list;
	list_node_t thread_link;

	void* mem_addr;
	QWORD mem_size;
	void* stack_addr;
	QWORD stack_size;

	QWORD flags;

	BYTE core;
} tcb_t;

tcb_t* create_task( QWORD flags, void* mem_addr, QWORD mem_size,
QWORD entry_addr);
void setup_task(tcb_t* task, QWORD flags, QWORD entry_addr, void* stack_addr,
QWORD stack_size);
void be_a_init(void);

#endif /* TASK_H_ */
